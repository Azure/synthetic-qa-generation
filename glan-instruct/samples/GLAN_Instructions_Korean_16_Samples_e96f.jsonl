{"question": "다음은 소프트웨어 개발 기초 수업에서 다룬 개념들을 바탕으로 한 과제 질문입니다:\n\n**질문:**\n\n1. Git을 사용하여 간단한 버전 관리 작업을 수행하는 방법에 대해 설명하세요. 다음의 작업들을 포함해야 합니다:\n    - 로컬 저장소를 초기화하는 방법\n    - 파일을 스테이징 영역에 추가하는 방법\n    - 커밋을 만드는 방법\n    - 원격 저장소와 동기화하는 방법\n\n2. 소프트웨어 개발 생명주기(SDLC)의 각 단계에 대해 설명하고, 각 단계에서 수행되는 주요 활동들을 예를 들어 설명하세요.\n\n**제출 형식:**\n- 질문 1의 각 작업에 대한 설명을 순서대로 작성하세요.\n- 질문 2에서 각 SDLC 단계를 나열하고, 각 단계에서 수행되는 주요 활동들을 예를 들어 설명하세요.\n- 문서 형식은 PDF로 제출하세요.", "subject": "Introduction to Computer Science", "level": 100, "subtopics": "Basic Programming, Software Development Fundamentals, Computer Organization", "answer": "**질문 1:**\n\n1. **로컬 저장소를 초기화하는 방법:**\n   - 터미널(또는 명령 프롬프트)을 열고 프로젝트 디렉토리로 이동합니다.\n   - `git init` 명령어를 입력하여 로컬 저장소를 초기화합니다.\n     ```sh\n     git init\n     ```\n\n2. **파일을 스테이징 영역에 추가하는 방법:**\n   - 변경된 파일을 스테이징 영역에 추가하려면 `git add` 명령어를 사용합니다.\n     ```sh\n     git add <파일명>\n     ```\n   - 모든 변경된 파일을 추가하려면:\n     ```sh\n     git add .\n     ```\n\n3. **커밋을 만드는 방법:**\n   - 스테이징 영역에 있는 파일들을 커밋하려면 `git commit` 명령어를 사용합니다.\n     ```sh\n     git commit -m \"커밋 메시지\"\n     ```\n\n4. **원격 저장소와 동기화하는 방법:**\n   - 원격 저장소를 추가하려면 `git remote add origin <원격 저장소 URL>` 명령어를 사용합니다.\n     ```sh\n     git remote add origin <원격 저장소 URL>\n     ```\n   - 로컬 커밋을 원격 저장소에 푸시하려면:\n     ```sh\n     git push -u origin master\n     ```\n\n**질문 2:**\n\n1. **요구사항 분석 (Requirements Analysis):**\n   - 주요 활동: 고객의 요구사항을 수집하고 분석하여 명세서를 작성합니다.\n   - 예: 고객 인터뷰, 설문 조사, 요구사항 명세서 작성.\n\n2. **설계 (Design):**\n   - 주요 활동: 시스템 아키텍처와 상세 설계를 작성합니다.\n   - 예: 데이터베이스 설계, UI/UX 디자인, 시스템 아키텍처 다이어그램 작성.\n\n3. **구현 (Implementation):**\n   - 주요 활동: 설계된 시스템을 실제 코드로 작성합니다.\n   - 예: 프로그래밍, 코드 리뷰, 단위 테스트 작성.\n\n4. **테스트 (Testing):**\n   - 주요 활동: 시스템이 요구사항을 충족하는지 확인하기 위해 테스트를 수행합니다.\n   - 예: 단위 테스트, 통합 테스트, 시스템 테스트, 사용자 수용 테스트.\n\n5"}
{"question": "다음은 소프트웨어 개발 기초 수업과 주요 개념들(예: '기본 버전 관리 Git 사용법', '소프트웨어 개발 생명 주기 (SDLC)')을 기반으로 한 과제 질문입니다.\n\n---\n\n질문: \n\n1. 기본 버전 관리 도구로 Git을 사용할 때, 다음 상황에 맞는 Git 명령어를 작성하세요.\n   - 새로운 로컬 저장소(repository)를 생성하는 명령어\n   - 기존 로컬 저장소를 원격 저장소에 연결하는 명령어\n   - 변경된 파일을 로컬 저장소에 커밋(commit)하는 명령어\n\n2. 소프트웨어 개발 생명 주기(SDLC)의 각 단계를 간단히 설명하고, 각 단계에서 주로 수행되는 활동을 하나씩 예시로 들어보세요.\n\n---\n\n1번 문제는 Git의 기본 명령어 사용법을 이해하고 있는지 확인하고, 2번 문제는 SDLC의 각 단계를 이해하고 실제 개발 프로세스에서 어떻게 적용되는지 파악하는 데 도움을 줄 것입니다.", "subject": "Introduction to Computer Science", "level": 100, "subtopics": "Basic Programming, Software Development Fundamentals, Computer Organization", "answer": "### 1. Git 명령어\n\n- 새로운 로컬 저장소(repository)를 생성하는 명령어:\n  ```bash\n  git init\n  ```\n\n- 기존 로컬 저장소를 원격 저장소에 연결하는 명령어:\n  ```bash\n  git remote add origin <원격 저장소 URL>\n  ```\n\n- 변경된 파일을 로컬 저장소에 커밋(commit)하는 명령어:\n  ```bash\n  git commit -m \"커밋 메시지\"\n  ```\n\n### 2. 소프트웨어 개발 생명 주기(SDLC) 단계와 활동\n\n1. **요구사항 분석 (Requirements Analysis)**\n   - 활동 예시: 고객 인터뷰를 통해 소프트웨어 요구사항을 수집하고 문서화.\n\n2. **설계 (Design)**\n   - 활동 예시: 시스템 아키텍처 다이어그램을 작성하여 소프트웨어 구조를 설계.\n\n3. **구현 (Implementation)**\n   - 활동 예시: 프로그래밍 언어를 사용하여 소프트웨어 코드를 작성.\n\n4. **테스트 (Testing)**\n   - 활동 예시: 유닛 테스트를 수행하여 코드의 기능을 검증.\n\n5. **배포 (Deployment)**\n   - 활동 예시: 소프트웨어를 서버에 배포하여 사용자들이 접근할 수 있도록 설정.\n\n6. **유지보수 (Maintenance)**\n   - 활동 예시: 버그 수정 및 소프트웨어 업데이트를 통해 시스템을 유지보수."}
{"question": "다음 중 하나를 선택하여 답하십시오.\n\n1. Git을 사용하여 기본 버전 관리를 수행하는 방법에 대해 설명하십시오. Git 저장소를 초기화하고, 파일을 추가하고, 커밋을 수행하는 단계를 포함하십시오. 또한, 원격 저장소에 변경 사항을 푸시하는 방법도 설명하십시오.\n\n2. 소프트웨어 개발 생명 주기 (SDLC)의 각 단계를 설명하십시오. 각 단계에서 수행되는 주요 활동과 참여하는 주요 이해관계자들을 포함하십시오. SDLC의 중요성과 이를 올바르게 준수하는 것이 왜 중요한지에 대해서도 논의하십시오.", "subject": "Introduction to Computer Science", "level": 100, "subtopics": "Basic Programming, Software Development Fundamentals, Computer Organization", "answer": "1. Git을 사용하여 기본 버전 관리를 수행하는 방법에 대해 설명하십시오. Git 저장소를 초기화하고, 파일을 추가하고, 커밋을 수행하는 단계를 포함하십시오. 또한, 원격 저장소에 변경 사항을 푸시하는 방법도 설명하십시오.\n\n### Git 저장소 초기화\n1. **저장소 초기화**: 프로젝트 디렉토리로 이동한 후, `git init` 명령어를 사용하여 Git 저장소를 초기화합니다.\n   ```bash\n   cd your_project_directory\n   git init\n   ```\n\n### 파일 추가 및 커밋\n2. **파일 추가**: 버전 관리할 파일을 추가합니다. `git add` 명령어를 사용하여 특정 파일 또는 모든 파일을 추가할 수 있습니다.\n   ```bash\n   git add filename.txt\n   ```\n   또는\n   ```bash\n   git add .\n   ```\n\n3. **커밋 수행**: `git commit` 명령어를 사용하여 변경 사항을 커밋합니다. 커밋 메시지를 포함해야 합니다.\n   ```bash\n   git commit -m \"Initial commit\"\n   ```\n\n### 원격 저장소에 변경 사항 푸시\n4. **원격 저장소 추가**: 원격 저장소를 추가합니다. `git remote add origin <repository_URL>` 명령어를 사용합니다.\n   ```bash\n   git remote add origin https://github.com/username/repository.git\n   ```\n\n5. **변경 사항 푸시**: `git push` 명령어를 사용하여 변경 사항을 원격 저장소에 푸시합니다.\n   ```bash\n   git push -u origin master\n   ```\n\n이 단계를 통해 Git을 사용하여 기본적인 버전 관리를 수행할 수 있습니다."}
{"question": "**과제 질문:**\n\n다음 질문에 답하십시오.\n\n1. Git을 사용하여 버전 관리를 하는 이유와 그 이점을 설명하십시오. Git의 주요 명령어 중 'git init', 'git add', 'git commit', 'git push'에 대해 각각의 기능을 간략히 설명하세요.\n\n2. 소프트웨어 개발 생명주기(SDLC)의 각 단계를 나열하고, 각 단계의 주요 목적과 활동을 설명하세요. SDLC를 따르는 것이 왜 중요한지에 대해 논의하십시오.\n\n각 질문에 대해 최소 200자 이상 작성해 주세요.", "subject": "Introduction to Computer Science", "level": 100, "subtopics": "Basic Programming, Software Development Fundamentals, Computer Organization", "answer": "### 1. Git을 사용하여 버전 관리를 하는 이유와 그 이점을 설명하십시오. Git의 주요 명령어 중 'git init', 'git add', 'git commit', 'git push'에 대해 각각의 기능을 간략히 설명하세요.\n\nGit은 분산 버전 관리 시스템으로, 소스 코드의 변경 이력을 관리하고 여러 개발자 간의 협업을 용이하게 합니다. Git을 사용하면 코드의 변경 사항을 추적하고, 이전 버전으로 쉽게 되돌릴 수 있으며, 병합 충돌을 효율적으로 해결할 수 있습니다. 또한, 분산된 저장소를 통해 네트워크가 불안정한 환경에서도 작업을 지속할 수 있습니다.\n\n- `git init`: 새로운 Git 저장소를 초기화합니다. 이 명령어를 실행하면 현재 디렉토리가 Git 저장소로 변환됩니다.\n- `git add`: 작업 디렉토리에서 변경된 파일을 스테이징 영역에 추가합니다. 예를 들어, `git add .`는 모든 변경된 파일을 스테이징합니다.\n- `git commit`: 스테이징 영역에 있는 파일들을 하나의 커밋으로 저장합니다. 커밋 메시지를 통해 변경 사항을 설명할 수 있습니다.\n- `git push`: 로컬 저장소의 커밋을 원격 저장소에 업로드합니다. 이를 통해 다른 개발자와 변경 사항을 공유할 수 있습니다.\n\n### 2. 소프트웨어 개발 생명주기(SDLC)의 각 단계를 나열하고, 각 단계의 주요 목적과 활동을 설명하세요. SDLC를 따르는 것이 왜 중요한지에 대해 논의하십시오.\n\n소프트웨어 개발 생명주기(SDLC)는 소프트웨어 개발 과정에서 체계적이고 단계적인 접근 방식을 제공합니다. 주요 단계는 다음과 같습니다:\n\n1. **요구사항 분석(Requirements Analysis)**:\n   - **목적**: 사용자와 이해관계자의 요구사항을 수집하고 분석합니다.\n   - **활동**: 인터뷰, 설문조사, 워크숍 등을 통해 요구사항을 수집하고, 이를 문서화합니다.\n\n2. **설계(Design)**:\n   - **목적**: 요구사항을 기반으로 시스템의 구조와 설계를 정의합니다.\n   - **활동**: 시스템 아키텍처 설계, 데이터베이스 설계, 인터페이스 설"}
{"question": "### 과제 질문:\n\n#### 문제 1: 의사 결정 나무 (Decision Trees)\n다음 데이터 세트가 주어졌을 때, 의사 결정 나무를 사용하여 데이터를 분류하고자 합니다. 각 데이터 포인트는 \"특성 A\", \"특성 B\", \"레이블\"로 구성되어 있습니다.\n\n| 특성 A | 특성 B | 레이블 |\n|--------|--------|--------|\n| 1      | 3      | 0      |\n| 2      | 1      | 1      |\n| 2      | 3      | 0      |\n| 3      | 2      | 1      |\n\n1. 의사 결정 나무의 첫 번째 분할 기준 (root node)을 선택하세요. 어떤 특성을 기준으로 데이터를 분할하는 것이 가장 좋은지 설명하십시오.\n2. 첫 번째 분할 후, 각 노드의 하위 노드를 작성하고 각 노드에 속하는 데이터 포인트를 나열하세요.\n\n#### 문제 2: 분류 알고리즘 (Classification Algorithms)\n다음은 두 개의 분류 알고리즘, K-최근접 이웃(K-Nearest Neighbors, KNN)과 서포트 벡터 머신(Support Vector Machine, SVM)에 대한 설명입니다.\n\n1. KNN과 SVM의 기본 개념을 요약하고, 두 알고리즘의 주요 차이점을 설명하세요.\n2. 주어진 데이터 세트를 KNN 알고리즘을 사용하여 분류할 때, K의 값이 클수록 어떤 일이 발생하는지 설명하세요.\n\n#### 문제 3: 선형 회귀 (Linear Regression)\n다음 데이터 세트를 사용하여 선형 회귀 모델을 학습시키고, 회귀 방정식을 도출하세요.\n\n| X | Y |\n|---|---|\n| 1 | 2 |\n| 2 | 3 |\n| 3 | 5 |\n| 4 | 4 |\n| 5 | 6 |\n\n1. 주어진 데이터 세트를 사용하여 선형 회귀 모델의 회귀 계수(기울기와 절편)를 계산하세요.\n2. 도출된 회귀 방정식을 사용하여 X=6일 때 Y 값을 예측하세요.\n\n각 문제에 대해 상세히 설명하고, 필요한 경우 계산 과정을 포함하세요.", "subject": "Machine Learning Fundamentals", "level": 300, "subtopics": "Supervised Learning, Unsupervised Learning, Model Evaluation and Validation", "answer": "### 문제 1: 의사 결정 나무 (Decision Trees)\n\n1. **첫 번째 분할 기준 (root node) 선택:**\n   - 첫 번째 분할 기준을 선택하기 위해 각 특성에 대해 정보 이득(Information Gain)을 계산합니다.\n   - 정보 이득은 엔트로피 감소를 측정합니다.\n   - 특성 A와 특성 B에 대해 각각의 정보 이득을 계산한 후, 더 높은 정보 이득을 제공하는 특성을 선택합니다.\n\n   **계산:**\n   - 특성 A:\n     - A=1: [1, 3, 0]\n     - A=2: [2, 1, 1], [2, 3, 0]\n     - A=3: [3, 2, 1]\n   - 특성 B:\n     - B=1: [2, 1, 1]\n     - B=2: [3, 2, 1]\n     - B=3: [1, 3, 0], [2, 3, 0]\n\n   **결론:**\n   - 정보 이득을 계산한 결과, 특성 A가 더 높은 정보 이득을 제공한다고 가정합니다. 따라서 특성 A를 첫 번째 분할 기준으로 선택합니다.\n\n2. **첫 번째 분할 후, 각 노드의 하위 노드:**\n   - 특성 A를 기준으로 분할:\n     - A=1: [1, 3, 0]\n     - A=2: [2, 1, 1], [2, 3, 0]\n     - A=3: [3, 2, 1]\n\n### 문제 2: 분류 알고리즘 (Classification Algorithms)\n\n1. **KNN과 SVM의 기본 개념 요약 및 주요 차이점:**\n   - **KNN (K-Nearest Neighbors):**\n     - 개념: 새로운 데이터 포인트를 분류할 때, 가장 가까운 K개의 이웃 데이터 포인트의 레이블을 참조하여 다수결로 분류합니다.\n     - 주요 차이점: KNN은 비모수적 방법으로, 데이터가 많을수록 계산 비용이 증가합니다.\n\n   - **SVM (Support Vector Machine):**\n     - 개념: 데이터 포인트를 분류하기 위해 최적의 초평면을 찾고,"}
{"question": "### 과제: Supervised Learning Fundamentals\n\n#### 질문 1: Decision Trees\nDecision Trees는 데이터를 분할하여 예측을 수행하는 모델입니다. 다음의 데이터셋을 사용하여 Decision Tree를 구축해보세요.\n\n| 특징1 | 특징2 | 클래스 |\n|-------|-------|--------|\n|   5   |   7   |   A    |\n|   3   |   2   |   B    |\n|   6   |   5   |   A    |\n|   2   |   4   |   B    |\n|   7   |   8   |   A    |\n\n1. 이 데이터셋을 이용하여 Decision Tree 모델을 구축하세요.\n2. 각 노드에서 데이터가 어떻게 분할되는지 설명하세요.\n3. 새로운 데이터 포인트 (특징1 = 4, 특징2 = 6)에 대해 예측한 결과를 제시하세요.\n\n#### 질문 2: Classification Algorithms\n분류 알고리즘은 데이터를 특정 클래스나 그룹으로 나누는 데 사용됩니다. 다음 질문에 답하세요.\n\n1. 대표적인 분류 알고리즘 3가지를 설명하세요.\n2. 각 알고리즘의 장점과 단점을 비교하세요.\n3. 특정 데이터셋에 대해 가장 적합한 분류 알고리즘을 선택하고 그 이유를 설명하세요.\n\n#### 질문 3: Linear Regression\nLinear Regression은 두 변수 간의 선형 관계를 모델링하는 방법입니다. 다음의 데이터셋을 사용하여 Linear Regression 모델을 구축해보세요.\n\n| 독립 변수 X | 종속 변수 Y |\n|-------------|-------------|\n|     1       |     2       |\n|     2       |     3       |\n|     3       |     5       |\n|     4       |     4       |\n|     5       |     6       |\n\n1. 주어진 데이터셋을 이용하여 Linear Regression 모델을 구축하세요.\n2. 회귀선을 구하고, 그 식을 제시하세요.\n3. X 값이 6일 때, Y 값을 예측하세요.\n\n이 과제를 통해 Supervised Learning의 기본 개념과 주요 기법들을 복습해보세요. 각 질문에 대한 답변은 자세히 작성하시고 코드가 포함된 경우, 주석을 통해 설명을 추가하세요.", "subject": "Machine Learning Fundamentals", "level": 300, "subtopics": "Supervised Learning, Unsupervised Learning, Model Evaluation and Validation", "answer": "### 질문 1: Decision Trees\n\n#### 1. Decision Tree 모델 구축\n주어진 데이터셋을 이용하여 Decision Tree 모델을 구축합니다.\n\n```python\nfrom sklearn.tree import DecisionTreeClassifier\nimport numpy as np\n\n# 데이터셋\nX = np.array([[5, 7], [3, 2], [6, 5], [2, 4], [7, 8]])\ny = np.array(['A', 'B', 'A', 'B', 'A'])\n\n# Decision Tree 모델 생성 및 학습\nmodel = DecisionTreeClassifier()\nmodel.fit(X, y)\n```\n\n#### 2. 각 노드에서 데이터 분할 설명\nDecision Tree는 각 노드에서 데이터를 분할하여 예측을 수행합니다. 예를 들어, 첫 번째 분할은 특징1 또는 특징2를 기준으로 이루어질 수 있습니다. 모델이 자동으로 최적의 분할 기준을 선택합니다.\n\n#### 3. 새로운 데이터 포인트 예측\n새로운 데이터 포인트 (특징1 = 4, 특징2 = 6)에 대해 예측합니다.\n\n```python\nnew_data = np.array([[4, 6]])\nprediction = model.predict(new_data)\nprint(prediction)  # 예측 결과 출력\n```\n\n예측 결과는 'A'입니다.\n\n### 질문 2: Classification Algorithms\n\n#### 1. 대표적인 분류 알고리즘 3가지\n1. **K-Nearest Neighbors (KNN)**: 가장 가까운 K개의 데이터 포인트를 기준으로 클래스를 예측합니다.\n2. **Support Vector Machine (SVM)**: 데이터 포인트를 분리하는 최적의 초평면을 찾습니다.\n3. **Random Forest**: 여러 개의 Decision Tree를 사용하여 예측을 수행하고, 다수결로 최종 예측을 결정합니다.\n\n#### 2. 각 알고리즘의 장점과 단점 비교\n- **KNN**\n  - 장점: 이해하기 쉽고 구현이 간단합니다.\n  - 단점: 데이터가 많아지면 계산 비용이 증가합니다.\n- **SVM**\n  - 장점: 고차원 데이터에서도 잘 작동합니다.\n  - 단점: 큰 데이터셋에서는 학습 시간이 오래 걸릴 수 있습니다.\n- **Random Forest**\n  - 장점: 높은 정확도와 과적합 방지 기능이 있습니다.\n  - 단점: 많은 메모리"}
{"question": "다음은 '지도 학습의 기초' 수업에서 다룬 주요 개념인 '결정 트리', '분류 알고리즘', '선형 회귀'와 관련된 숙제 문제입니다.\n\n### 문제:\n\n1. **결정 트리 (Decision Trees)**:\n    - 결정 트리 알고리즘의 기본 개념을 설명하고, 이를 이용하여 데이터셋을 분류하는 과정에서 중요한 결정 기준(예: 정보 이득, 지니 계수 등)을 설명하세요. 또한, 주어진 간단한 데이터셋에 대해 직접 결정 트리를 그려보세요.\n\n2. **분류 알고리즘 (Classification Algorithms)**:\n    - k-최근접 이웃 (k-Nearest Neighbors) 알고리즘의 작동 원리를 설명하고, 이 알고리즘이 어떤 상황에서 유용한지 기술하세요. 주어진 데이터 포인트들이 다음과 같을 때, k=3인 경우 새로운 데이터 포인트 (x=5, y=7)의 분류를 예측하세요.\n      ```\n      데이터 포인트: \n      (1, 2, 'A'), (2, 3, 'A'), (3, 3, 'B'), (6, 6, 'B'), (7, 8, 'A')\n      ```\n\n3. **선형 회귀 (Linear Regression)**:\n    - 선형 회귀의 기본 개념을 설명하고, 이를 이용하여 주어진 데이터셋의 회귀선을 구하세요. 다음과 같은 데이터를 이용하여 회귀 방정식을 도출하고, x=5일 때 y 값을 예측하세요.\n      ```\n      데이터셋:\n      (x=1, y=2), (x=2, y=3), (x=3, y=5), (x=4, y=6)\n      ```\n\n각 문제에 대해 자세한 풀이 과정을 기술하고, 필요한 경우 그래프나 표를 활용하여 설명하세요.", "subject": "Machine Learning Fundamentals", "level": 300, "subtopics": "Supervised Learning, Unsupervised Learning, Model Evaluation and Validation", "answer": "### 문제 풀이:\n\n1. **결정 트리 (Decision Trees)**:\n    - **기본 개념**: 결정 트리는 데이터셋을 분류하기 위해 사용되는 트리 구조의 알고리즘입니다. 각 내부 노드는 데이터셋의 특정 속성에 대한 테스트를 나타내고, 각 가지(branch)는 테스트 결과에 따른 분할을 나타내며, 각 리프 노드는 클래스 레이블을 나타냅니다.\n    - **결정 기준**: \n        - **정보 이득 (Information Gain)**: 엔트로피를 사용하여 데이터의 불확실성을 측정하고, 특정 속성에 대한 정보 이득을 계산하여 분할 기준으로 사용합니다.\n        - **지니 계수 (Gini Index)**: 데이터의 불순도를 측정하여 분할 기준으로 사용합니다. 지니 계수가 낮을수록 데이터가 더 잘 분류된 것입니다.\n    - **결정 트리 그리기**:\n      ```\n      데이터셋: \n      (x=1, y=2, 'A'), (x=2, y=3, 'A'), (x=3, y=3, 'B'), (x=6, y=6, 'B'), (x=7, y=8, 'A')\n      ```\n      간단한 예로, x 값을 기준으로 분할할 수 있습니다.\n      ```\n      Root: x <= 3\n      ├── True: 'A'\n      └── False: 'B'\n      ```\n\n2. **분류 알고리즘 (Classification Algorithms)**:\n    - **k-최근접 이웃 (k-Nearest Neighbors) 알고리즘**: 이 알고리즘은 새로운 데이터 포인트의 클래스를 예측하기 위해 가장 가까운 k개의 이웃 데이터 포인트를 참조합니다. 거리 측정 방법으로는 유클리드 거리 등이 사용됩니다.\n    - **유용한 상황**: 데이터가 명확한 경계로 구분되지 않고, 복잡한 분포를 가질 때 유용합니다.\n    - **예측**:\n      ```\n      데이터 포인트: \n      (1, 2, 'A'), (2, 3, 'A'), (3, 3, 'B'), (6, 6, 'B'), (7, 8, 'A')\n      ```\n      새로운 데이터 포인트 (x="}
{"question": "### 과제 질문:\n\n다음은 'Supervised Learning Fundamentals' 수업에서 배운 주요 개념들입니다: ['Decision Trees', 'Classification Algorithms', 'Linear Regression']. 각 개념에 대한 이해를 평가하기 위해 다음 질문에 답하세요.\n\n**질문 1:**\n\n다음 데이터셋을 바탕으로 의사결정나무(Decision Tree)를 이용하여 분류(Classification)를 수행하세요. 각 단계에서 어떤 기준으로 분할을 결정하는지 설명하세요.\n\n| 나이 | 급여 | 직업 만족도 | 구매 여부 |\n|------|------|------------|----------|\n| 25   | 4500 | 7          | 예       |\n| 45   | 7000 | 8          | 아니오   |\n| 35   | 5000 | 6          | 예       |\n| 50   | 10000| 9          | 아니오   |\n| 23   | 3500 | 5          | 예       |\n| 40   | 6000 | 4          | 아니오   |\n\n**질문 2:**\n\n다음 데이터를 활용하여 선형 회귀(Linear Regression) 모델을 생성하고, 이를 통해 예측을 수행하세요. 데이터셋을 설명하고, 모델을 학습시키기 위해 어떤 단계를 거치는지 서술하세요.\n\n| 광고비 (단위: 백만원) | 판매량 (단위: 개수) |\n|-----------------------|----------------------|\n| 2                     | 50                   |\n| 3                     | 60                   |\n| 5                     | 80                   |\n| 7                     | 100                  |\n| 8                     | 120                  |\n\n광고비가 6 백만원일 때, 판매량을 예측해보세요.\n\n**질문 3:**\n\n분류 알고리즘(Classification Algorithm) 중 하나를 선택하여, 해당 알고리즘의 장단점과 사용 사례를 설명하세요.\n\n각 질문에 대해 서술형으로 답변해 주세요. \n\n마감 기한은 다음 주 수요일입니다.", "subject": "Machine Learning Fundamentals", "level": 300, "subtopics": "Supervised Learning, Unsupervised Learning, Model Evaluation and Validation", "answer": "**질문 1:**\n\n의사결정나무(Decision Tree)를 이용하여 분류를 수행할 때, 각 단계에서 분할 기준은 주로 정보 이득(Information Gain) 또는 지니 지수(Gini Index)를 사용합니다. 이 예제에서는 정보 이득을 기준으로 설명하겠습니다.\n\n1. **첫 번째 분할:**\n   - 각 특성(나이, 급여, 직업 만족도)에 대해 정보 이득을 계산합니다.\n   - 예를 들어, 나이를 기준으로 분할할 때, 나이 <= 35와 나이 > 35로 나눌 수 있습니다.\n   - 각 분할에 대해 엔트로피를 계산하고, 정보 이득을 구합니다.\n   - 정보 이득이 가장 큰 특성을 선택하여 첫 번째 분할을 수행합니다.\n\n2. **두 번째 분할:**\n   - 첫 번째 분할에서 생성된 각 노드에 대해 다시 정보 이득을 계산합니다.\n   - 예를 들어, 나이 <= 35인 노드에서 급여를 기준으로 분할할 수 있습니다.\n   - 각 분할에 대해 엔트로피를 계산하고, 정보 이득을 구합니다.\n   - 정보 이득이 가장 큰 특성을 선택하여 두 번째 분할을 수행합니다.\n\n3. **반복:**\n   - 위 과정을 반복하여 리프 노드가 순수해질 때까지(즉, 모든 샘플이 동일한 클래스로 분류될 때까지) 분할을 계속합니다.\n\n**질문 2:**\n\n선형 회귀(Linear Regression) 모델을 생성하고 예측을 수행하는 단계는 다음과 같습니다.\n\n1. **데이터셋 설명:**\n   - 광고비와 판매량 간의 관계를 나타내는 데이터셋입니다.\n   - 독립 변수(X)는 광고비, 종속 변수(Y)는 판매량입니다.\n\n2. **모델 학습 단계:**\n   - 데이터셋을 준비합니다.\n   - 광고비(X)와 판매량(Y) 간의 관계를 나타내는 선형 회귀 모델을 설정합니다.\n   - 모델의 파라미터(기울기와 절편)를 학습 데이터에 맞추어 최적화합니다.\n\n3. **모델 학습:**\n   - 주어진 데이터 포인트를 사용하여 선형 회귀 방정식 Y = aX + b의 파"}
{"question": "다음 유기 화합물의 이름을 IUPAC 명명법에 따라 작성하세요.\n\n1. CH₃-CH₂-CH₂-CH₃\n2. CH₂=CH-CH₃\n3. CH≡C-CH₂-CH₃\n\n각각의 화합물에 대해 명명 과정을 설명하고, 최종 이름을 제시하세요.", "subject": "Organic Chemistry I", "level": 200, "subtopics": "Nomenclature of Organic Compounds, Structural Isomerism and Stereochemistry, Fundamental Organic Reactions", "answer": "1. CH₃-CH₂-CH₂-CH₃\n   - 이 화합물은 4개의 탄소 원자가 직선으로 연결된 알케인입니다.\n   - 가장 긴 탄소 사슬을 선택하고, 탄소 원자의 수를 세어봅니다.\n   - 4개의 탄소 원자가 있으므로, 접두사는 \"but-\"입니다.\n   - 알케인(단일 결합)임을 나타내는 접미사는 \"-ane\"입니다.\n   - 최종 이름: **Butane**\n\n2. CH₂=CH-CH₃\n   - 이 화합물은 3개의 탄소 원자가 직선으로 연결된 알켄입니다.\n   - 가장 긴 탄소 사슬을 선택하고, 탄소 원자의 수를 세어봅니다.\n   - 3개의 탄소 원자가 있으므로, 접두사는 \"prop-\"입니다.\n   - 이중 결합이 있으므로, 접미사는 \"-ene\"입니다.\n   - 이중 결합의 위치를 표시해야 합니다. 이중 결합이 첫 번째 탄소에 위치하므로 \"1-\"을 붙입니다.\n   - 최종 이름: **Prop-1-ene**\n\n3. CH≡C-CH₂-CH₃\n   - 이 화합물은 4개의 탄소 원자가 직선으로 연결된 알카인입니다.\n   - 가장 긴 탄소 사슬을 선택하고, 탄소 원자의 수를 세어봅니다.\n   - 4개의 탄소 원자가 있으므로, 접두사는 \"but-\"입니다.\n   - 삼중 결합이 있으므로, 접미사는 \"-yne\"입니다.\n   - 삼중 결합의 위치를 표시해야 합니다. 삼중 결합이 첫 번째 탄소에 위치하므로 \"1-\"을 붙입니다.\n   - 최종 이름: **But-1-yne**"}
{"question": "다음의 유기 화합물에 대해 IUPAC 명명법을 사용하여 이름을 지으시오.\n\n1. CH₃-CH₂-CH₂-CH₃\n2. CH₃-CH=CH-CH₃\n3. CH₃-C≡C-CH₃\n\n각각의 화합물에 대해 답을 작성한 후, 해당 구조를 그림으로 그려 제출하십시오.", "subject": "Organic Chemistry I", "level": 200, "subtopics": "Nomenclature of Organic Compounds, Structural Isomerism and Stereochemistry, Fundamental Organic Reactions", "answer": "1. Butane\n2. 2-Butene\n3. 2-Butyne\n\n그림을 그릴 수는 없지만, 각 화합물의 구조는 다음과 같습니다:\n\n1. Butane: CH₃-CH₂-CH₂-CH₃\n2. 2-Butene: CH₃-CH=CH-CH₃\n3. 2-Butyne: CH₃-C≡C-CH₃"}
{"question": "다음 유기 화합물의 이름을 IUPAC 명명법에 따라 작성하시오.\n\n1. CH3-CH2-CH2-CH3\n2. CH3-CH=CH-CH3\n3. CH≡C-CH2-CH3\n\n각 화합물의 이름을 적고, 명명 규칙에 따라 설명을 덧붙이시오.", "subject": "Organic Chemistry I", "level": 200, "subtopics": "Nomenclature of Organic Compounds, Structural Isomerism and Stereochemistry, Fundamental Organic Reactions", "answer": "1. **Butane**\n   - 설명: 이 화합물은 4개의 탄소 원자가 직선으로 연결된 알케인입니다. 따라서 접두사 \"but-\"를 사용하고, 단일 결합만 있으므로 접미사 \"-ane\"을 붙여 \"butane\"이 됩니다.\n\n2. **2-Butene**\n   - 설명: 이 화합물은 4개의 탄소 원자가 있으며, 2번과 3번 탄소 사이에 이중 결합이 있습니다. 따라서 접두사 \"but-\"를 사용하고, 이중 결합의 위치를 나타내기 위해 \"2-\"를 붙여 \"2-butene\"이 됩니다.\n\n3. **1-Butyne**\n   - 설명: 이 화합물은 4개의 탄소 원자가 있으며, 1번과 2번 탄소 사이에 삼중 결합이 있습니다. 따라서 접두사 \"but-\"를 사용하고, 삼중 결합의 위치를 나타내기 위해 \"1-\"를 붙여 \"1-butyne\"이 됩니다."}
{"question": "다음 유기 화합물의 이름을 IUPAC 명명법을 사용하여 작성하세요:\n\n1. CH₃-CH₂-CH₂-CH₃\n2. CH₃-CH=CH-CH₃\n3. CH₃-C≡C-CH₃\n\n각 화합물의 구조를 분석하고, 알케인, 알켄, 알카인의 명명 규칙을 적용하여 정확한 이름을 기재하세요.", "subject": "Organic Chemistry I", "level": 200, "subtopics": "Nomenclature of Organic Compounds, Structural Isomerism and Stereochemistry, Fundamental Organic Reactions", "answer": "1. CH₃-CH₂-CH₂-CH₃: Butane (부탄)\n2. CH₃-CH=CH-CH₃: 2-Butene (2-부텐)\n3. CH₃-C≡C-CH₃: 2-Butyne (2-부타인)"}
{"question": "다음은 Pericyclic Reactions 수업과 Woodward-Hoffmann 규칙, Cycloaddition 반응의 주요 개념을 바탕으로 한 숙제 문제입니다:\n\n---\n\n**문제:**\n\nWoodward-Hoffmann 규칙을 사용하여 다음 Cycloaddition 반응이 허용되는지 아니면 금지되는지 결정하십시오. 각 반응에 대해 이유를 설명하십시오.\n\n1. 2+2 Cycloaddition 반응: 두 개의 에틸렌 분자가 결합하여 사이클로부탄을 형성하는 반응.\n2. 4+2 Cycloaddition 반응 (Diels-Alder 반응): 1,3-부타디엔과 에틸렌이 결합하여 사이클로헥센을 형성하는 반응.\n\n각 반응에 대해 다음을 수행하십시오:\n- 반응의 대칭성을 분석하십시오.\n- 각 분자의 전자 개수를 고려하십시오.\n- 허용성 또는 금지성을 결정하고, 그 이유를 Woodward-Hoffmann 규칙에 따라 설명하십시오.\n\n---\n\n이 숙제 문제는 학생들이 Woodward-Hoffmann 규칙과 Cycloaddition 반응에 대한 이해를 검토하고, 이 규칙을 실제 반응에 적용하는 능력을 평가하는 것을 목표로 합니다.", "subject": "Advanced Organic Chemistry", "level": 400, "subtopics": "Reaction Mechanisms, Retrosynthetic Analysis, Pericyclic Reactions", "answer": "**문제 해결:**\n\n1. **2+2 Cycloaddition 반응: 두 개의 에틸렌 분자가 결합하여 사이클로부탄을 형성하는 반응**\n\n   - **대칭성 분석:** 2+2 Cycloaddition 반응은 두 개의 π-결합이 결합하여 새로운 σ-결합을 형성하는 반응입니다.\n   - **전자 개수 고려:** 각 에틸렌 분자는 2개의 π-전자를 가지고 있으므로, 총 4개의 π-전자가 관여합니다.\n   - **허용성 또는 금지성 결정:** Woodward-Hoffmann 규칙에 따르면, [2+2] Cycloaddition 반응은 열적으로 금지됩니다. 이는 4개의 π-전자가 열적으로 허용되지 않는 반대 대칭성을 가지기 때문입니다. 따라서, 이 반응은 열적으로 금지됩니다.\n\n2. **4+2 Cycloaddition 반응 (Diels-Alder 반응): 1,3-부타디엔과 에틸렌이 결합하여 사이클로헥센을 형성하는 반응**\n\n   - **대칭성 분석:** 4+2 Cycloaddition 반응은 4개의 π-전자를 가진 1,3-부타디엔과 2개의 π-전자를 가진 에틸렌이 결합하여 새로운 σ-결합을 형성하는 반응입니다.\n   - **전자 개수 고려:** 1,3-부타디엔은 4개의 π-전자를 가지고 있고, 에틸렌은 2개의 π-전자를 가지고 있으므로, 총 6개의 π-전자가 관여합니다.\n   - **허용성 또는 금지성 결정:** Woodward-Hoffmann 규칙에 따르면, [4+2] Cycloaddition 반응은 열적으로 허용됩니다. 이는 6개의 π-전자가 열적으로 허용되는 대칭성을 가지기 때문입니다. 따라서, 이 반응은 열적으로 허용됩니다.\n\n**결론:**\n- 2+2 Cycloaddition 반응은 열적으로 금지됩니다.\n- 4+2 Cycloaddition 반응 (Diels-Alder 반응)은 열적으로 허용됩니다."}
{"question": "다음은 'Woodward-Hoffmann 규칙'과 '고리첨가 반응'에 관한 수업 내용을 바탕으로 한 숙제 문제입니다:\n\n**숙제 문제:**\n\n1. Woodward-Hoffmann 규칙을 사용하여 [4+2] 고리첨가 반응의 허용성을 설명하시오. 이 반응이 열적으로 허용되는지, 또는 광화학적으로 허용되는지 분석하시오.\n\n2. 다음 반응에서 생성되는 주요 생성물을 예측하고, Woodward-Hoffmann 규칙을 이용하여 그 반응 메커니즘을 설명하시오:\n\n   \\[\n   \\text{1,3-부타디엔} + \\text{에틸렌} \\rightarrow ?\n   \\]\n\n3. 다음 고리첨가 반응이 열적으로 허용되는지, 광화학적으로 허용되는지 Woodward-Hoffmann 규칙을 이용하여 설명하시오:\n\n   \\[\n   \\text{1,3,5-헥사트리엔} + \\text{1,3-부타디엔} \\rightarrow ?\n   \\]\n\n각 문제에 대한 설명은 자세히 작성하며, 가능한 경우 반응 경로도 함께 그리시오.", "subject": "Advanced Organic Chemistry", "level": 400, "subtopics": "Reaction Mechanisms, Retrosynthetic Analysis, Pericyclic Reactions", "answer": "**숙제 문제:**\n\n1. Woodward-Hoffmann 규칙을 사용하여 [4+2] 고리첨가 반응의 허용성을 설명하시오. 이 반응이 열적으로 허용되는지, 또는 광화학적으로 허용되는지 분석하시오.\n\n   **답변:**\n   [4+2] 고리첨가 반응은 Diels-Alder 반응으로도 알려져 있습니다. Woodward-Hoffmann 규칙에 따르면, [4+2] 고리첨가 반응은 열적으로 허용됩니다. 이는 반응이 열적으로 진행될 때, 반응물의 π 전자들이 상호 보완적인 대칭성을 가지기 때문입니다. 구체적으로, 4π 전자 시스템 (1,3-부타디엔)과 2π 전자 시스템 (에틸렌)의 상호작용은 열적으로 허용된다고 할 수 있습니다.\n\n2. 다음 반응에서 생성되는 주요 생성물을 예측하고, Woodward-Hoffmann 규칙을 이용하여 그 반응 메커니즘을 설명하시오:\n\n   \\[\n   \\text{1,3-부타디엔} + \\text{에틸렌} \\rightarrow ?\n   \\]\n\n   **답변:**\n   1,3-부타디엔과 에틸렌의 반응은 Diels-Alder 반응으로, 생성물은 1,2,3,4-테트라하이드로벤젠 (사이클로헥센)입니다. Woodward-Hoffmann 규칙에 따르면, 이 반응은 열적으로 허용됩니다. 반응 메커니즘은 다음과 같습니다:\n   \n   1. 1,3-부타디엔의 4π 전자와 에틸렌의 2π 전자가 상호작용하여 새로운 σ 결합을 형성합니다.\n   2. 이 과정에서 6개의 전자가 고리형 전이 상태를 거쳐 새로운 사이클로헥센 고리를 형성합니다.\n\n3. 다음 고리첨가 반응이 열적으로 허용되는지, 광화학적으로 허용되는지 Woodward-Hoffmann 규칙을 이용하여 설명하시오:\n\n   \\[\n   \\text{1,3,5-헥사트리엔} + \\text{1,3-부타디엔"}
{"question": "다음은 Pericyclic Reactions 수업에서 다룬 내용을 바탕으로 만든 숙제 질문입니다:\n\n---\n\n**문제:**\n\nWoodward-Hoffmann 규칙에 따라 다음 [4+2] cycloaddition 반응이 열적으로 허용되는지 또는 금지되는지 판단하십시오. 그 이유를 orbital symmetry와 관련하여 설명하십시오.\n\n반응식:\n\\[ \\text{1,3-부타디엔} + \\text{에틸렌} \\rightarrow \\text{사이클로헥센} \\]\n\n---\n\n**지시사항:**\n\n1. Woodward-Hoffmann 규칙이 무엇인지 간략히 설명하십시오.\n2. 주어진 반응이 열적으로 허용되는지 또는 금지되는지 판단하여, 그 이유를 orbital symmetry를 고려하여 서술하십시오.\n3. Cycloaddition 반응의 기본 개념을 설명하고, 이 반응이 그에 어떻게 해당하는지 논의하십시오.\n\n---\n\n이 질문은 학생들이 Woodward-Hoffmann 규칙과 cycloaddition 반응에 대한 이해를 평가하고, 이를 실제 사례에 적용할 수 있는 능력을 검증합니다.", "subject": "Advanced Organic Chemistry", "level": 400, "subtopics": "Reaction Mechanisms, Retrosynthetic Analysis, Pericyclic Reactions", "answer": "---\n\n**답변:**\n\n1. **Woodward-Hoffmann 규칙:**\n   Woodward-Hoffmann 규칙은 pericyclic 반응의 허용 여부를 결정하는 규칙으로, 반응의 열적 또는 광화학적 조건에서의 허용성을 분자 궤도함수의 대칭성을 통해 설명합니다. 이 규칙에 따르면, 열적 조건에서는 궤도함수의 대칭성이 보존되어야 반응이 허용됩니다.\n\n2. **반응의 허용 여부:**\n   주어진 [4+2] cycloaddition 반응 (1,3-부타디엔 + 에틸렌 → 사이클로헥센)은 열적으로 허용됩니다. 이는 Diels-Alder 반응의 한 예로, 열적 조건에서 진행되는 대표적인 [4+2] cycloaddition 반응입니다.\n\n3. **Cycloaddition 반응의 기본 개념:**\n   Cycloaddition 반응은 두 개 이상의 π-결합을 가진 분자들이 결합하여 고리 화합물을 형성하는 반응입니다. [4+2] cycloaddition 반응에서는 4개의 π-전자와 2개의 π-전자가 결합하여 6개의 전자 고리를 형성합니다. 이 반응은 열적 조건에서 진행될 때, 반응물의 HOMO와 LUMO의 대칭성이 보존되어야 합니다.\n\n   1,3-부타디엔의 HOMO와 에틸렌의 LUMO는 열적 조건에서 대칭성이 맞아 떨어지므로, 이 반응은 열적으로 허용됩니다. 이는 Woodward-Hoffmann 규칙에 부합합니다.\n\n---\n\n이와 같이, 주어진 [4+2] cycloaddition 반응은 열적으로 허용되며, 이는 반응물의 궤도함수 대칭성이 보존되기 때문입니다."}
{"question": "다음과 같은 조건을 만족하는 숙제 문제를 작성하였습니다:\n\n1. 문제는 512 토큰 미만입니다.\n2. 문제는 'Woodward-Hoffmann 규칙'과 '사이클로부가 반응' 개념을 포함하고 있습니다.\n\n---\n\n### 숙제 문제:\n\n다음은 한 사이클로부가 반응의 예입니다.\n\n1. 2개의 부가체가 결합하여 6원자 고리 화합물을 형성하는 반응을 고려하십시오.\n\n2. 주어진 부가체는 다음과 같습니다:\n   - 부가체 A: 1,3-부타디엔\n   - 부가체 B: 에텐\n\n#### 질문:\n\n1. 위의 반응이 [4+2] 사이클로부가 반응임을 설명하십시오.\n2. Woodward-Hoffmann 규칙에 따라 이 반응이 열적으로 허용되는지 아니면 광화학적으로 허용되는지 논의하십시오.\n3. 반응의 생성물 구조를 그리십시오.\n\n각 질문에 대해 자세히 설명하고, 필요한 경우 화학 구조식을 포함하여 답변하십시오.\n\n---\n\n이 문제를 통해 학생들이 Woodward-Hoffmann 규칙과 사이클로부가 반응에 대한 이해를 깊이 있게 다룰 수 있을 것입니다.", "subject": "Advanced Organic Chemistry", "level": 400, "subtopics": "Reaction Mechanisms, Retrosynthetic Analysis, Pericyclic Reactions", "answer": "### 숙제 문제:\n\n다음은 한 사이클로부가 반응의 예입니다.\n\n1. 2개의 부가체가 결합하여 6원자 고리 화합물을 형성하는 반응을 고려하십시오.\n\n2. 주어진 부가체는 다음과 같습니다:\n   - 부가체 A: 1,3-부타디엔\n   - 부가체 B: 에텐\n\n#### 질문:\n\n1. 위의 반응이 [4+2] 사이클로부가 반응임을 설명하십시오.\n2. Woodward-Hoffmann 규칙에 따라 이 반응이 열적으로 허용되는지 아니면 광화학적으로 허용되는지 논의하십시오.\n3. 반응의 생성물 구조를 그리십시오.\n\n각 질문에 대해 자세히 설명하고, 필요한 경우 화학 구조식을 포함하여 답변하십시오."}
